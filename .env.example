# MinIO Configuration (Separate Instance for Observability)
# ==========================================================
# This setup runs its own MinIO instance on different ports than your app

# MinIO API endpoint (accessible from Docker containers)
S3_ENDPOINT=http://minio:9000

# MinIO endpoint without protocol (used by Tempo)
S3_ENDPOINT_TRIMMED=minio:9000

# MinIO region (can be any value for local MinIO)
AWS_REGION=us-east-1

# S3 bucket name for storing observability data (Loki logs, Tempo traces)
# Note: You need to create this bucket in MinIO after starting the services
BUCKET_NAME=observability

# Additional S3 bucket for Mimir metrics and ruler storage
# Note: You need to create this bucket in MinIO after starting the services
EXTRA_BUCKET_NAME=mimir-ruler

# MinIO Access Key (username)
AWS_ACCESS_KEY_ID=minioadmin

# MinIO Secret Key (password)
AWS_SECRET_ACCESS_KEY=minioadmin


# Optional: Loki Logging Driver Configuration
# ============================================
# Uncomment if you want to use Loki as a logging driver for Docker containers

# LOKI_URL=http://loki:3100/loki/api/v1/push


# Instructions for First Time Setup:
# ==================================
# 1. Copy this file to .env: cp .env.example .env
# 2. Start the services: docker-compose up -d
# 3. Wait 30 seconds for MinIO to fully start
# 4. Access MinIO console at http://localhost:9003
#    - Username: minioadmin
#    - Password: minioadmin
# 5. Create the required buckets:
#    - observability
#    - mimir-ruler
# 6. Restart services: docker-compose restart loki mimir tempo

# Note: This MinIO runs on ports 9002/9003 (different from standard 9000/9001)
#       to avoid conflicts with other MinIO instances
